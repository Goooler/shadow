apply plugin: "com.gradle.plugin-publish"

group = "io.github.goooler"
version = "8.1.2"

gradlePlugin {
    website = 'https://github.com/Goooler/shadow'
    vcsUrl = 'https://github.com/Goooler/shadow'

    plugins {
        shadowPlugin {
            id = 'io.github.goooler.shadow'
            implementationClass = 'com.github.jengelman.gradle.plugins.shadow.ShadowPlugin'
            displayName = 'Shadow Plugin'
            description = "A fork of https://github.com/johnrengelman/shadow"
            tags.set(['onejar', 'shade', 'fatjar', 'uberjar'])
        }
    }
}

tasks.named('publishPlugins') {
    doFirst {
        if (version.endsWith("SNAPSHOT")) {
            throw new GradleException('Cannot publish SNAPSHOT versions to Plugin Portal!')
        }
    }
    notCompatibleWithConfigurationCache("https://github.com/gradle/gradle/issues/21283")
}

signing {
    if (System.env.CI == 'true') {
        def encodedSigningKey = findProperty("signingKey")
        def signingKey = encodedSigningKey ? new String(encodedSigningKey.decodeBase64()) : null
        def signingPassword = findProperty("signingPassword") as String
        useInMemoryPgpKeys(signingKey, signingPassword)
    }
    // See https://github.com/johnrengelman/shadow/pull/831#discussion_r1119012328
    required = false && gradle.taskGraph.hasTask("artifactoryPublish")
    sign(publishing.publications)
}

tasks.withType(Sign).configureEach {
    notCompatibleWithConfigurationCache("https://github.com/gradle/gradle/issues/13470")
}

tasks.register('release') {
    dependsOn tasks.named('assemble'), tasks.named('publishPlugins'), tasks.named('gitPublishPush')
}
